<?xml version="1.0"?>

<!-- ======================================================================= -->
<!-- WEB EJBTest build file                                                  -->
<!-- ======================================================================= -->

<project name="trader-server" default="redeploy" basedir=".">
																				
	<property environment="env" />
			
	<property name="app.dir" value="${basedir}" />
	<property name="app.name" value="dataServices-samples" />			
	<property name="app.path" value="/${app.name}" />
	<property name="app.version" value="0.1-dev" />
	<property name="build.home" value="${basedir}/build" />

	<property name="dist.home" value="${basedir}/dist" />
	<property name="src.home" value="${basedir}/src" />
	<property name="resouce.dir" value="${basedir}\WebRoot" />	
	<property name="catalina.home" value="F:\server\apache tomcat 7.0.27" />		
	
	<!-- If the version is 7.*, then you will use the command below.
	<property name="manager.url" value="http://localhost:8888/manager/text" />			
	-->								
	<!-- If the version is 6.*, then you will use the command below.				
	<property name="manager.url" value="http://192.168.10.210:8888/manager" />		
	-->		
										
	<property name="manager.url" value="http://192.168.10.210:8080/manager/text" />																													
	<property name="manager.username" value="tomcat" />
	<property name="manager.password" value="tomcat" />

	<path id="compile.classpath">
		<fileset dir="${catalina.home}/bin">
			<include name="tomcat-juli.jar" />
		</fileset>
		<pathelement location="${catalina.home}/lib" />
		<fileset dir="${catalina.home}/lib">
			<include name="catalina-ant.jar" />
			<include name="tomcat-coyote.jar" />			
			<include name="tomcat-util.jar" />
		</fileset>
	</path>
			
	<!-- Configure the custom Ant tasks for the Manager application -->
	<taskdef name="deploy" classname="org.apache.catalina.ant.DeployTask" classpathref="compile.classpath" />
	<taskdef name="undeploy" classname="org.apache.catalina.ant.UndeployTask" classpathref="compile.classpath" />
	<taskdef name="list" classname="org.apache.catalina.ant.ListTask" classpathref="compile.classpath" />
	<taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask" />
	<taskdef name="resources" classname="org.apache.catalina.ant.ResourcesTask" />
	<taskdef name="start" classname="org.apache.catalina.ant.StartTask" />
	<taskdef name="stop" classname="org.apache.catalina.ant.StopTask" />

	<property name="compile.debug" value="true" />
	<property name="compile.deprecation" value="false" />
	<property name="compile.optimize" value="true" />

	<!-- Build classpath -->
	<path id="build.classpath">
		<fileset dir="${resouce.dir}\WEB-INF\lib">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${catalina.home}\lib">
			<include name="*.jar" />
		</fileset>								
		<pathelement location="${${build.home}/WEB-INF/classes}" />		
	</path>
	<!-- 
	<target name="all" depends="clean,compile" description="Clean build and dist directories, then compile" />
	-->
	<target name="clean" depends="install" description="Delete old build and dist directories">
				
		<delete dir="${build.home}" />
		<delete dir="${dist.home}" />			
		<delete file="*.war"></delete>									

	</target>

	<target name="prepare">

		<mkdir dir="${build.home}" />
		<mkdir dir="${build.home}/WEB-INF" />
		<mkdir dir="${build.home}/WEB-INF/classes" />
		<mkdir dir="${build.home}/WEB-INF/lib" />

	</target>

	<target name="compile" depends="prepare" description="Compile Java sources">

		<!-- Compile Java classes as necessary -->
		<mkdir dir="${build.home}/WEB-INF/classes" />
		<javac srcdir="${src.home}" destdir="${build.home}/WEB-INF/classes" includes="**" debug="${compile.debug}" deprecation="${compile.deprecation}" optimize="${compile.optimize}">
			<classpath refid="build.classpath" />								
		</javac>
				
		<!-- Copy application resources -->
		<copy todir="${build.home}/WEB-INF/classes">
			<fileset dir="${src.home}" excludes="**/*.java" />
		</copy>
		
		<!-- Copy internalization properties file -->							
		<copy todir="${resouce.dir}/WEB-INF/classes">				
			<fileset dir="${resouce.dir}/WEB-INF/Internalization">
				<include name="messages_zh_CN.properties" />				
			</fileset>
		</copy>						
	</target>

	<target name="dist" depends="compile" description="Create binary distribution">

		<war warfile="${basedir}\${app.name}.war" webxml="${resouce.dir}\WEB-INF\web.xml">				
			<fileset dir="${resouce.dir}">
				<include name="**/*" />
			</fileset>
		</war>
				
	</target>

	<target name="install" depends="dist" description="Install application to servlet container">

		<deploy url="${manager.url}" username="${manager.username}" password="${manager.password}" path="${app.path}" war="${basedir}\${app.name}.war" />			
				
	</target>
			
	<target name="list" description="List installed applications on servlet container">

		<list url="${manager.url}" username="${manager.username}" password="${manager.password}" />

	</target>
	
	<target name="redeploy" description="Remove and Install web application">  			 
	    <antcall target="remove"/>         
	    <antcall target="install"/>   			
	</target>
	
	<target name="reload" depends="compile" description="Reload application on servlet container">

		<reload url="${manager.url}" username="${manager.username}" password="${manager.password}" path="${app.path}" />

	</target>

	<target name="remove" description="Remove application on servlet container">

		<undeploy url="${manager.url}" username="${manager.username}" password="${manager.password}" path="${app.path}" />

	</target>
</project>

